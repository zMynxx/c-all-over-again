name: CD

on:
  # Manually trigger publish
  workflow_dispatch:

  # Publish on every new tag
  #pull_request:
  #  branches:
  #  - "main"
  #tags:
  #    - "v*.*.*"

env:
  TEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:22.04-v0.32.0-d76db35
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:latest

jobs:
  docker-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build locally
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: Dockerfile.ubuntu
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate Release using Docker
        run: |
          docker run \
          --interactive \
          --rm \
          --volume ./project-demo:/project \
          ${{ env.TEST_TAG }} \
          ceedling release

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v0.1.15
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/artifacts/release/MyApp.out
          tag_name: 22.04-v0.32.0-d76db35

      - name: Publish image to DockerHub
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: Dockerfile.ubuntu
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.TEST_TAG }}
            ${{ env.LATEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
